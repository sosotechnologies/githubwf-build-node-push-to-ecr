name: Node js app deploy to Docker Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is latest stable
      id: install

    - name: Set up KUBECONFIG for Docker Desktop
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Set Docker Desktop context for kubectl
      run: |
        kubectl config use-context docker-desktop

    - name: Fetch Git Tags
      run: git fetch --tags

    - name: Bump Version
      run: |
        chmod +x ./bump-version.sh
        ./bump-version.sh

    - name: Build, tag, and push docker image to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        IMAGE_TAG: ${{ env.NEW_VERSION }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        docker build -t $DOCKER_USERNAME/xcite:$IMAGE_TAG .
        docker push $DOCKER_USERNAME/xcite:$IMAGE_TAG

    - name: Deploy to Docker Desktop
      run: |
        kubectl apply -f deploy.yaml
        kubectl apply -f service.yaml

# name: Node js app deploy to EKS
# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Install kubectl
#       uses: azure/setup-kubectl@v2.0
#       with:
#         version: 'v1.24.0' # default is latest stable
#       id: install

#     - name: Set up KUBECONFIG
#       run: |
#         mkdir -p $HOME/.kube
#         echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
#         chmod 600 $HOME/.kube/config

#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: us-east-1

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Fetch Git Tags
#       run: git fetch --tags

#     - name: Bump Version
#       run: |
#         chmod +x ./bump-version.sh
#         ./bump-version.sh

#     - name: Build, tag, and push docker image to Amazon ECR
#       env:
#         REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         REPOSITORY: xcite
#         IMAGE_TAG: ${{ env.NEW_VERSION }}
#       run: |
#         docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
#         docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
    
#     - name: Deploy to EKS
#       run: |
#         kubectl apply -f deployment.yaml
#         kubectl apply -f service.yaml